.version sol 0.49.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc TerminalImpl.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro input
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc TerminalImpl.sol, 15
LDU 32
LDREF
LDI 1
ENDS
.loc TerminalImpl.sol, 0
PUSHREF {
}
.loc TerminalImpl.sol, 16
SWAP
PUSH2 S2, S3
PUSHSLICE xc00000000000000000000000004584b422
NEWC
STSLICE
STU 32
STREF
STI 1
ENDC
PUSHINT 0
SENDRAWMSG
.loc TerminalImpl.sol, 0
BLKDROP2 2, 1
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000002ea17ecde_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro print
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc TerminalImpl.sol, 19
LDU 32
LDREF
ENDS
.loc TerminalImpl.sol, 20
SWAP
PUSHSLICE xc00000000000000000000000001ef016d1
NEWC
STSLICE
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc TerminalImpl.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro printf
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc TerminalImpl.sol, 23
LDU 32
LDREF
LDREF
ENDS
.loc TerminalImpl.sol, 0
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro call_input
DROP
GETGLOB 6
THROWIFNOT 76
.loc TerminalImpl.sol, 25
LDMSGADDRQ
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDUQ 32
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
LDREF
ENDS
.loc TerminalImpl.sol, 0
CALLREF {
	CALL $call_input_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	call_input_internal
.type	call_input_internal, @function
CALL $call_input_internal_macro$

.macro call_input_internal_macro
.loc TerminalImpl.sol, 26
ACCEPT
.loc TerminalImpl.sol, 27
NEWC
.loc TerminalImpl.sol, 28
SWAP
PUSH S2
ROT
STU 32
STREF
.loc TerminalImpl.sol, 29
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000003_
STSLICER
STBREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc TerminalImpl.sol, 0
DROP2

.macro c7_to_c4
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
ENDC
POPROOT

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
ENDS
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHREFCONT {
	CALL $c4_to_c7$
}
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60 ; funcId body'
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro public_function_selector
DUP
PUSHINT 1756716863
LEQ
IFJMPREF {
	DUP
	PUSHINT 436165405
	EQUAL
	IFJMPREF {
		CALL $call_input$
	}
	DUP
	PUSHINT 981859127
	EQUAL
	IFJMPREF {
		CALL $input$
	}
	DUP
	PUSHINT 1667746797
	EQUAL
	IFJMPREF {
		CALL $print$
	}
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
}
DUP
PUSHINT 1918211802
EQUAL
IFJMPREF {
	CALL $printf$
}

